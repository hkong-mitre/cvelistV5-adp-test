{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2021-47391",
        "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "state": "PUBLISHED",
        "assignerShortName": "Linux",
        "dateReserved": "2024-05-21T14:58:30.813Z",
        "datePublished": "2024-05-21T15:03:49.545Z",
        "dateUpdated": "2024-07-04T00:12:56.682Z"
    },
    "containers": {
        "cna": {
            "providerMetadata": {
                "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
                "shortName": "Linux",
                "dateUpdated": "2024-05-29T05:07:08.277Z"
            },
            "descriptions": [
                {
                    "lang": "en",
                    "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Ensure rdma_addr_cancel() happens before issuing more requests\n\nThe FSM can run in a circle allowing rdma_resolve_ip() to be called twice\non the same id_priv. While this cannot happen without going through the\nwork, it violates the invariant that the same address resolution\nbackground request cannot be active twice.\n\n       CPU 1                                  CPU 2\n\nrdma_resolve_addr():\n  RDMA_CM_IDLE -> RDMA_CM_ADDR_QUERY\n  rdma_resolve_ip(addr_handler)  #1\n\n\t\t\t process_one_req(): for #1\n                          addr_handler():\n                            RDMA_CM_ADDR_QUERY -> RDMA_CM_ADDR_BOUND\n                            mutex_unlock(&id_priv->handler_mutex);\n                            [.. handler still running ..]\n\nrdma_resolve_addr():\n  RDMA_CM_ADDR_BOUND -> RDMA_CM_ADDR_QUERY\n  rdma_resolve_ip(addr_handler)\n    !! two requests are now on the req_list\n\nrdma_destroy_id():\n destroy_id_handler_unlock():\n  _destroy_id():\n   cma_cancel_operation():\n    rdma_addr_cancel()\n\n                          // process_one_req() self removes it\n\t\t          spin_lock_bh(&lock);\n                           cancel_delayed_work(&req->work);\n\t                   if (!list_empty(&req->list)) == true\n\n      ! rdma_addr_cancel() returns after process_on_req #1 is done\n\n   kfree(id_priv)\n\n\t\t\t process_one_req(): for #2\n                          addr_handler():\n\t                    mutex_lock(&id_priv->handler_mutex);\n                            !! Use after free on id_priv\n\nrdma_addr_cancel() expects there to be one req on the list and only\ncancels the first one. The self-removal behavior of the work only happens\nafter the handler has returned. This yields a situations where the\nreq_list can have two reqs for the same \"handle\" but rdma_addr_cancel()\nonly cancels the first one.\n\nThe second req remains active beyond rdma_destroy_id() and will\nuse-after-free id_priv once it inevitably triggers.\n\nFix this by remembering if the id_priv has called rdma_resolve_ip() and\nalways cancel before calling it again. This ensures the req_list never\ngets more than one item in it and doesn't cost anything in the normal flow\nthat never uses this strange error path."
                }
            ],
            "affected": [
                {
                    "product": "Linux",
                    "vendor": "Linux",
                    "defaultStatus": "unaffected",
                    "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
                    "programFiles": [
                        "drivers/infiniband/core/cma.c",
                        "drivers/infiniband/core/cma_priv.h"
                    ],
                    "versions": [
                        {
                            "version": "e51060f08a61",
                            "lessThan": "9a085fa9b7d6",
                            "status": "affected",
                            "versionType": "git"
                        },
                        {
                            "version": "e51060f08a61",
                            "lessThan": "03d884671572",
                            "status": "affected",
                            "versionType": "git"
                        },
                        {
                            "version": "e51060f08a61",
                            "lessThan": "305d568b72f1",
                            "status": "affected",
                            "versionType": "git"
                        }
                    ]
                },
                {
                    "product": "Linux",
                    "vendor": "Linux",
                    "defaultStatus": "affected",
                    "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
                    "programFiles": [
                        "drivers/infiniband/core/cma.c",
                        "drivers/infiniband/core/cma_priv.h"
                    ],
                    "versions": [
                        {
                            "version": "2.6.18",
                            "status": "affected"
                        },
                        {
                            "version": "0",
                            "lessThan": "2.6.18",
                            "status": "unaffected",
                            "versionType": "custom"
                        },
                        {
                            "version": "5.10.188",
                            "lessThanOrEqual": "5.10.*",
                            "status": "unaffected",
                            "versionType": "custom"
                        },
                        {
                            "version": "5.14.10",
                            "lessThanOrEqual": "5.14.*",
                            "status": "unaffected",
                            "versionType": "custom"
                        },
                        {
                            "version": "5.15",
                            "lessThanOrEqual": "*",
                            "status": "unaffected",
                            "versionType": "original_commit_for_fix"
                        }
                    ]
                }
            ],
            "references": [
                {
                    "url": "https://git.kernel.org/stable/c/9a085fa9b7d644a234465091e038c1911e1a4f2a"
                },
                {
                    "url": "https://git.kernel.org/stable/c/03d884671572af8bcfbc9e63944c1021efce7589"
                },
                {
                    "url": "https://git.kernel.org/stable/c/305d568b72f17f674155a2a8275f865f207b3808"
                }
            ],
            "title": "RDMA/cma: Ensure rdma_addr_cancel() happens before issuing more requests",
            "x_generator": {
                "engine": "bippy-a5840b7849dd"
            }
        },
        "adp": [
            {
                "metrics": [
                    {
                        "other": {
                            "type": "ssvc",
                            "content": {
                                "id": "CVE-2021-47391",
                                "role": "CISA Coordinator",
                                "options": [
                                    {
                                        "Exploitation": "none"
                                    },
                                    {
                                        "Automatable": "no"
                                    },
                                    {
                                        "Technical Impact": "partial"
                                    }
                                ],
                                "version": "2.0.3",
                                "timestamp": "2024-05-21T17:33:43.729564Z"
                            }
                        }
                    }
                ],
                "providerMetadata": {
                    "orgId": "8c464350-323a-4346-a867-fc54517fa145",
                    "shortName": "CISAADP",
                    "dateUpdated": "2024-05-24T01:03:23.841Z"
                }
            },
            {
                "providerMetadata": {
                    "orgId": "96f1cf3c-f80a-4e0f-a063-99a91e3f1325",
                    "shortName": "secretariat-reference",
                    "dateUpdated": "2024-07-04T00:12:56.682Z"
                },
                "references": [
                    {
                        "url": "https://git.kernel.org/stable/c/9a085fa9b7d644a234465091e038c1911e1a4f2a/DEMO_2024_06_19",
                        "tags": [
                            "x_cve_prog_secretariat_snapshot"
                        ]
                    },
                    {
                        "url": "https://git.kernel.org/stable/c/03d884671572af8bcfbc9e63944c1021efce7589/DEMO_2024_06_19",
                        "tags": [
                            "x_cve_prog_secretariat_snapshot"
                        ]
                    },
                    {
                        "url": "https://git.kernel.org/stable/c/305d568b72f17f674155a2a8275f865f207b3808/DEMO_2024_06_19",
                        "tags": [
                            "x_cve_prog_secretariat_snapshot"
                        ]
                    },
                    {
                        "url": "https://git.kernel.org/stable/c/9a085fa9b7d644a234465091e038c1911e1a4f2a/adp-test-6-28",
                        "tags": [
                            "x_snapshot"
                        ]
                    },
                    {
                        "url": "https://git.kernel.org/stable/c/03d884671572af8bcfbc9e63944c1021efce7589/adp-test-6-28",
                        "tags": [
                            "x_snapshot"
                        ]
                    },
                    {
                        "url": "https://git.kernel.org/stable/c/305d568b72f17f674155a2a8275f865f207b3808/adp-test-6-28",
                        "tags": [
                            "x_snapshot"
                        ]
                    }
                ]
            }
        ]
    }
}