{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2024-2452",
        "assignerOrgId": "e51fbebd-6053-4e49-959f-1b94eeb69a2c",
        "state": "PUBLISHED",
        "assignerShortName": "eclipse",
        "dateReserved": "2024-03-14T14:48:55.832Z",
        "datePublished": "2024-03-26T15:43:36.233Z",
        "dateUpdated": "2024-06-26T20:51:50.331Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unaffected",
                    "packageName": "NetX Duo",
                    "product": "ThreadX",
                    "repo": "https://github.com/eclipse-threadx/netxduo/",
                    "vendor": "Eclipse Foundation",
                    "versions": [
                        {
                            "lessThan": "6.4.0",
                            "status": "affected",
                            "version": "0",
                            "versionType": "semver"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "Marco Ivaldi"
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<div>In Eclipse ThreadX NetX Duo before 6.4.0, if an attacker can control \nparameters of __portable_aligned_alloc() could cause an integer \nwrap-around and an allocation smaller than expected. This could cause \nsubsequent heap buffer overflows.<br></div>"
                        }
                    ],
                    "value": "In Eclipse ThreadX NetX Duo before 6.4.0, if an attacker can control \nparameters of __portable_aligned_alloc() could cause an integer \nwrap-around and an allocation smaller than expected. This could cause \nsubsequent heap buffer overflows.\n\n"
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "HIGH",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "LOW",
                        "baseScore": 7,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "LOW",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:L",
                        "version": "3.1"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-120",
                            "description": "CWE-120 Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                },
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-190",
                            "description": "CWE-190 Integer Overflow or Wraparound",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "e51fbebd-6053-4e49-959f-1b94eeb69a2c",
                "shortName": "eclipse",
                "dateUpdated": "2024-03-26T15:43:36.233Z"
            },
            "references": [
                {
                    "url": "https://github.com/eclipse-threadx/netxduo/security/advisories/GHSA-h963-7vhw-8rpx"
                },
                {
                    "url": "http://seclists.org/fulldisclosure/2024/May/35"
                },
                {
                    "url": "http://www.openwall.com/lists/oss-security/2024/05/28/1"
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "Integer wraparound, under-allocation, and heap buffer overflow in Eclipse ThreadX NetX Duo __portable_aligned_alloc() ",
            "x_generator": {
                "engine": "Vulnogram 0.1.0-dev"
            }
        },
        "adp": [
            {
                "providerMetadata": {
                    "orgId": "96f1cf3c-f80a-4e0f-a063-99a91e3f1325",
                    "shortName": "secretariat-reference",
                    "dateUpdated": "2024-06-21T15:33:38.812Z"
                },
                "references": [
                    {
                        "url": "https://github.com/eclipse-threadx/netxduo/security/advisories/GHSA-h963-7vhw-8rpx/DEMO_2024_06_19",
                        "tags": [
                            "x_cve_prog_secretariat_snapshot"
                        ]
                    }
                ]
            }
        ]
    }
}