{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2024-24553",
        "assignerOrgId": "455daabc-a392-441d-aa46-37d35189897c",
        "state": "PUBLISHED",
        "assignerShortName": "NCSC.ch",
        "dateReserved": "2024-01-25T14:02:00.526Z",
        "datePublished": "2024-06-24T07:10:03.585Z",
        "dateUpdated": "2024-06-24T14:07:23.855Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "collectionURL": "https://www.bludit.com/",
                    "defaultStatus": "unaffected",
                    "packageName": "Bludit",
                    "platforms": [
                        "Linux",
                        "Windows",
                        "MacOS"
                    ],
                    "product": "Bludit",
                    "programFiles": [
                        "bl-kernel/login.class.php",
                        "bl-kernel/users.class.php"
                    ],
                    "repo": "https://github.com/bludit/bludit/",
                    "vendor": "Bludit",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "2.0"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "Andreas Pfefferle, Redguard AG"
                }
            ],
            "datePublic": "2024-06-20T16:00:00.000Z",
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "Bludit uses the SHA-1 hashing algorithm to compute password hashes. Thus, attackers could determine cleartext passwords with brute-force attacks due to the inherent speed of SHA-1. In addition, the salt that is computed by Bludit is generated with a non-cryptographically secure function.<br>"
                        }
                    ],
                    "value": "Bludit uses the SHA-1 hashing algorithm to compute password hashes. Thus, attackers could determine cleartext passwords with brute-force attacks due to the inherent speed of SHA-1. In addition, the salt that is computed by Bludit is generated with a non-cryptographically secure function."
                }
            ],
            "impacts": [
                {
                    "capecId": "CAPEC-49",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-49 Password Brute Forcing"
                        }
                    ]
                },
                {
                    "capecId": "CAPEC-16",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-16 Dictionary-based Password Attack"
                        }
                    ]
                },
                {
                    "capecId": "CAPEC-20",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-20 Encryption Brute Forcing"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV4_0": {
                        "Automatable": "NOT_DEFINED",
                        "Recovery": "NOT_DEFINED",
                        "Safety": "NOT_DEFINED",
                        "attackComplexity": "HIGH",
                        "attackRequirements": "PRESENT",
                        "attackVector": "NETWORK",
                        "baseScore": 5.9,
                        "baseSeverity": "MEDIUM",
                        "privilegesRequired": "HIGH",
                        "providerUrgency": "NOT_DEFINED",
                        "subAvailabilityImpact": "NONE",
                        "subConfidentialityImpact": "NONE",
                        "subIntegrityImpact": "NONE",
                        "userInteraction": "NONE",
                        "valueDensity": "NOT_DEFINED",
                        "vectorString": "CVSS:4.0/AV:N/AC:H/AT:P/PR:H/UI:N/VC:L/VI:H/VA:N/SC:N/SI:N/SA:N",
                        "version": "4.0",
                        "vulnAvailabilityImpact": "NONE",
                        "vulnConfidentialityImpact": "LOW",
                        "vulnIntegrityImpact": "HIGH",
                        "vulnerabilityResponseEffort": "NOT_DEFINED"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-916",
                            "description": "CWE-916 Use of Password Hash With Insufficient Computational Effort",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "455daabc-a392-441d-aa46-37d35189897c",
                "shortName": "NCSC.ch",
                "dateUpdated": "2024-06-24T07:10:03.585Z"
            },
            "references": [
                {
                    "url": "https://www.redguard.ch/blog/2024/06/20/security-advisory-bludit/"
                }
            ],
            "solutions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "To address this vulnerability, it is imperative that the Bludit development team transitions to a more secure and intentionally slow hashing algorithm, such as bcrypt or Argon2, for password storage. These algorithms introduce the necessary computational overhead to resist brute-force attacks effectively. In addition, it is advised that appropriate cost factors are used. <br><br>Furthermore, the generation of password salts should be revamped to employ a cryptographically secure method. The current approach, utilizing the `Text::randomText function`, should be replaced with a robust random number generator provided by the operating system or a dedicated cryptographic library. This change ensures the creation of unpredictable and secure salts, enhancing the overall resilience of the password storage mechanism."
                        }
                    ],
                    "value": "To address this vulnerability, it is imperative that the Bludit development team transitions to a more secure and intentionally slow hashing algorithm, such as bcrypt or Argon2, for password storage. These algorithms introduce the necessary computational overhead to resist brute-force attacks effectively. In addition, it is advised that appropriate cost factors are used. \n\nFurthermore, the generation of password salts should be revamped to employ a cryptographically secure method. The current approach, utilizing the `Text::randomText function`, should be replaced with a robust random number generator provided by the operating system or a dedicated cryptographic library. This change ensures the creation of unpredictable and secure salts, enhancing the overall resilience of the password storage mechanism."
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "Bludit uses SHA1 as Password Hashing Algorithm",
            "x_generator": {
                "engine": "Vulnogram 0.2.0"
            }
        }
    }
}